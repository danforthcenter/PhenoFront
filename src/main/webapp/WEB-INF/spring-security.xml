<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    					http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
						http://www.springframework.org/schema/security 
   						http://www.springframework.org/schema/security/spring-security-3.1.xsd
   						http://www.springframework.org/schema/context 
   						http://www.springframework.org/schema/context/spring-context.xsd">

	<context:annotation-config />
	<!-- This is where we configure Spring-Security -->
	<security:http auto-config="false" use-expressions="true"
		access-denied-page="/auth/denied" entry-point-ref="authenticationEntryPoint">

		<security:intercept-url pattern="/auth/login"
			access="permitAll" />
		<security:intercept-url pattern="/admin"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/admin/*"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/userarea"
			access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/userarea/*"
			access="hasRole('ROLE_USER')" />

		<security:logout invalidate-session="true"
			logout-success-url="/" />

		<security:custom-filter ref="authenticationFilter"
			position="FORM_LOGIN_FILTER" />
	</security:http>

	<!-- Custom filter to deny unwanted users even though registered -->
	<!-- Custom filter for username and password. The real customization is 
		done in the customAuthenticationManager -->
	<bean id="authenticationFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"
		p:authenticationManager-ref="customAuthenticationManager"
		p:authenticationFailureHandler-ref="customAuthenticationFailureHandler"
		p:authenticationSuccessHandler-ref="customAuthenticationSuccessHandler" />

	<!-- Custom authentication manager. In order to authenticate, username and 
		password must not be the same -->
	<bean id="customAuthenticationManager" class="src.ddpsc.authentication.CustomAuthenticationManager" />

	<!-- We just actually need to set the default failure url here -->
	<bean id="customAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"
		p:defaultFailureUrl="/auth/login?error=true" />

	<!-- We just actually need to set the default target url here -->
	<bean id="customAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler"
		p:defaultTargetUrl="/userarea" />

	<!-- The AuthenticationEntryPoint is responsible for redirecting the user 
		to a particular page, like a login page, whenever the server sends back a 
		response requiring authentication -->
	<!-- See Spring-Security Reference 5.4.1 for more info -->
	<bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint"
		p:loginFormUrl="/auth/login" />

	<!-- Standard password encoder that is used by our database. Automatically 
		salts. -->
	<bean
		class="org.springframework.security.crypto.password.StandardPasswordEncoder"
		id="passwordEncoder" />

	<!-- authdb config -->
	<context:component-scan base-package="src.ddpsc.authentication" />
	
	
	<bean id="userDao" class="src.ddpsc.database.user.UserDaoImpl" />  
	<bean id="authSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/PhenoFront" />
		<property name="username" value="root" />
		<property name="password" value="password" />
	</bean>


	<!-- The tag below has no use but Spring Security needs it to autowire the 
		parent property of org.springframework.security.authentication.ProviderManager. 
		Otherwise we get an error A probable bug. This is still under investigation -->
	<security:authentication-manager />

</beans>